#!/bin/bash

# Read the Passphrase from Console
do_read_passphrase()
{
    local _key="" _passphrase=""
    _passphrase="$(systemd-ask-password --id=$1 "Enter $1 Password: ")"
    until openssl aes-256-cbc -d -salt -pbkdf2 -in ~/keys/$1.key -out /dev/null -k "${_passphrase}" >/dev/null 2>&1; do
        _passphrase="$(systemd-ask-password --id=$1 "Incorrect Password. Enter $1 Password: ")"
    done
    _key=$(keyctl padd user "$1" @u <<< "${_passphrase}")
    keyctl timeout ${_key} $2
        
}

# Link the seeion to the User keyring so Keys are available to new login processes
keyctl link @us @s

[[ -f ~/host.conf ]] && . ~/host.conf

# Ask for timeout
echo -ne "\033[1mBoot Timeout (m): \033[0m"
read -rt 30 timeout; 
until [[ "${timeout}" =~ ^[0-9]+$ ]]; do
    echo -ne "\033[1mBoot Timeout (m): \033[0m"
    read -rt 30 timeout;
done
[[ -z "${timeout}" ]] && timeout=10
timeout=$((timeout*60))

# Get the stored Keys and read passphrases.
cd ~/keys
for f in *.key; do
    key=$(sed 's/\.key$//' <<< "${f}")
    if [[ "${key}" != "*" ]]; then
        do_read_passphrase ${key} ${timeout};
    else
        echo "No Stored Passphrases for ${USER}"
        exit 1
    fi
done

# Wake-up System.
[[ -n $MAC && -n $INTERFACE ]] && sudo /usr/sbin/etherwake -i $INTERFACE -b $MAC

echo -ne "\033[1mFork to Background? (Y/n): \033[0m"
read -t 30 -rn 1 y
echo

keyctl list @u

if [[ "${y,,}" == "y" ]] || [[ -z ${y} ]]; then 
    sleep ${timeout} &
else
    sleep ${timeout}
fi
